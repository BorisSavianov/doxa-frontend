import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import '../styles/admin.css';

const Admin = () => {
  const [selectedFilter, setSelectedFilter] = useState('–≤—Å–∏—á–∫–∏');
  const [showAddProcedure, setShowAddProcedure] = useState(false);

  const usersData = [
    {
      id: 1,
      name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      position: '–ü—Ä–æ—Ñ–µ—Å–æ—Ä',
      university: '–°–æ—Ñ–∏–π—Å–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
      lastJuryDate: '15.12.2024',
      previousJuryDate: '20.06.2024',
      city: '–°–æ—Ñ–∏—è'
    },
    {
      id: 2,
      name: '–ú–∞—Ä–∏—è –ì–µ–æ—Ä–≥–∏–µ–≤–∞',
      position: '–î–æ–∫—Ç–æ—Ä',
      university: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç - –°–æ—Ñ–∏—è',
      lastJuryDate: '10.01.2025',
      previousJuryDate: '15.08.2024',
      city: '–°–æ—Ñ–∏—è'
    },
    {
      id: 3,
      name: '–ì–µ–æ—Ä–≥–∏ –î–∏–º–∏—Ç—Ä–æ–≤',
      position: '–î–æ—Ü–µ–Ω—Ç',
      university: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç - –°–æ—Ñ–∏—è',
      lastJuryDate: '05.11.2024',
      previousJuryDate: '12.03.2024',
      city: '–°–æ—Ñ–∏—è'
    },
    {
      id: 4,
      name: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª–µ–≤–∞',
      position: '–ü—Ä–æ—Ñ–µ—Å–æ—Ä',
      university: '–ü–ª–æ–≤–¥–∏–≤—Å–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
      lastJuryDate: '20.10.2024',
      previousJuryDate: '25.04.2024',
      city: '–ü–ª–æ–≤–¥–∏–≤'
    },
    {
      id: 5,
      name: '–°—Ç–æ—è–Ω –ò–≤–∞–Ω–æ–≤',
      position: '–î–æ–∫—Ç–æ—Ä',
      university: '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ø–æ —Ö—Ä–∞–Ω–∏—Ç–µ–ª–Ω–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      lastJuryDate: '08.12.2024',
      previousJuryDate: '14.07.2024',
      city: '–ü–ª–æ–≤–¥–∏–≤'
    },
    {
      id: 6,
      name: '–ê–Ω–Ω–∞ –ù–∏–∫–æ–ª–æ–≤–∞',
      position: '–î–æ—Ü–µ–Ω—Ç',
      university: '–í–∞—Ä–Ω–µ–Ω—Å–∫–∏ —Å–≤–æ–±–æ–¥–µ–Ω —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
      lastJuryDate: '12.09.2024',
      previousJuryDate: '18.02.2024',
      city: '–í–∞—Ä–Ω–∞'
    },
    {
      id: 7,
      name: '–ü–µ—Ç—ä—Ä –°—Ç–æ—è–Ω–æ–≤',
      position: '–ü—Ä–æ—Ñ–µ—Å–æ—Ä',
      university: '–ë—É—Ä–≥–∞—Å–∫–∏ —Å–≤–æ–±–æ–¥–µ–Ω —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
      lastJuryDate: '25.11.2024',
      previousJuryDate: '30.05.2024',
      city: '–ë—É—Ä–≥–∞—Å'
    },
    {
      id: 8,
      name: '–î–∏–∞–Ω–∞ –ü–æ–ø–æ–≤–∞',
      position: '–î–æ–∫—Ç–æ—Ä',
      university: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç - –í–∞—Ä–Ω–∞',
      lastJuryDate: '18.01.2025',
      previousJuryDate: '22.09.2024',
      city: '–í–∞—Ä–Ω–∞'
    }
  ];

  const filters = [
    { value: '–≤—Å–∏—á–∫–∏', label: '–í—Å–∏—á–∫–∏', count: usersData.length },
    { value: '–ø—Ä–æ—Ñ–µ—Å–æ—Ä', label: '–ü—Ä–æ—Ñ–µ—Å–æ—Ä–∏', count: usersData.filter(user => user.position === '–ü—Ä–æ—Ñ–µ—Å–æ—Ä').length },
    { value: '–¥–æ–∫—Ç–æ—Ä', label: '–î–æ–∫—Ç–æ—Ä–∏', count: usersData.filter(user => user.position === '–î–æ–∫—Ç–æ—Ä').length },
    { value: '–¥–æ—Ü–µ–Ω—Ç', label: '–î–æ—Ü–µ–Ω—Ç–∏', count: usersData.filter(user => user.position === '–î–æ—Ü–µ–Ω—Ç').length },
    { value: '—Å–æ—Ñ–∏—è', label: '–°–æ—Ñ–∏—è', count: usersData.filter(user => user.city === '–°–æ—Ñ–∏—è').length },
    { value: '–ø–ª–æ–≤–¥–∏–≤', label: '–ü–ª–æ–≤–¥–∏–≤', count: usersData.filter(user => user.city === '–ü–ª–æ–≤–¥–∏–≤').length },
    { value: '–≤–∞—Ä–Ω–∞', label: '–í–∞—Ä–Ω–∞', count: usersData.filter(user => user.city === '–í–∞—Ä–Ω–∞').length },
    { value: '–±—É—Ä–≥ac', label: '–ë—É—Ä–≥–∞—Å', count: usersData.filter(user => user.city === '–ë—É—Ä–≥–∞—Å').length }
  ];

  const getFilteredUsers = () => {
    if (selectedFilter === '–≤—Å–∏—á–∫–∏') {
      return usersData;
    }
    
    if (['–ø—Ä–æ—Ñ–µ—Å–æ—Ä', '–¥–æ–∫—Ç–æ—Ä', '–¥–æ—Ü–µ–Ω—Ç'].includes(selectedFilter)) {
      return usersData.filter(user => user.position.toLowerCase() === selectedFilter);
    }
    
    return usersData.filter(user => user.city.toLowerCase() === selectedFilter);
  };

  const getPositionColor = (position) => {
    const colors = {
      '–ü—Ä–æ—Ñ–µ—Å–æ—Ä': '#8b5cf6',
      '–î–æ–∫—Ç–æ—Ä': '#10b981',
      '–î–æ—Ü–µ–Ω—Ç': '#f59e0b'
    };
    return colors[position] || '#6b7280';
  };

  const getCityColor = (city) => {
    const colors = {
      '–°–æ—Ñ–∏—è': '#2563eb',
      '–ü–ª–æ–≤–¥–∏–≤': '#ef4444',
      '–í–∞—Ä–Ω–∞': '#06b6d4',
      '–ë—É—Ä–≥–∞—Å': '#84cc16'
    };
    return colors[city] || '#6b7280';
  };

  return (
    <div className="admin-page">
      <div className="page-header">
    
        <h2>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–µ–Ω –ø–∞–Ω–µ–ª</h2>
      </div>

      <div className="admin-container">
        {/* –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="admin-actions">
          <div className="actions-header">
            <h2>–î–µ–π—Å—Ç–≤–∏—è</h2>
          </div>
          <div className="actions-grid">
            <button 
              className="action-btn primary"
              onClick={() => setShowAddProcedure(true)}
            >
              <span className="action-icon">+</span>
              <span className="action-text">–î–æ–±–∞–≤–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞</span>
            </button>
            <button className="action-btn secondary">
              <span className="action-icon">üë•</span>
              <span className="action-text">–î–æ–±–∞–≤–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª</span>
            </button>
            <button className="action-btn secondary">
              <span className="action-icon">üìä</span>
              <span className="action-text">–ì–µ–Ω–µ—Ä–∏—Ä–∞–π –æ—Ç—á–µ—Ç</span>
            </button>
          </div>
        </div>

        {/* –§–∏–ª—Ç—Ä–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ */}
        <div className="users-filters">
          <div className="filters-header">
            <h2>–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏</h2>
            <span className="users-count">{getFilteredUsers().length} –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏</span>
          </div>
          <div className="filters-scroll">
            {filters.map((filter) => (
              <button
                key={filter.value}
                className={`filter-btn ${selectedFilter === filter.value ? 'active' : ''}`}
                onClick={() => setSelectedFilter(filter.value)}
              >
                <span className="filter-label">{filter.label}</span>
                <span className="filter-count">{filter.count}</span>
              </button>
            ))}
          </div>
        </div>

        {/* –°–ø–∏—Å—ä–∫ —Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ */}
        <div className="users-list-section">
          <div className="users-list">
            {getFilteredUsers().map((user) => (
              <div key={user.id} className="user-card">
                <div className="user-header">
                  <div className="user-name">{user.name}</div>
                  <div className="user-badges">
                    <span 
                      className="position-badge"
                      style={{ backgroundColor: getPositionColor(user.position) }}
                    >
                      {user.position}
                    </span>
                    <span 
                      className="city-badge"
                      style={{ backgroundColor: getCityColor(user.city) }}
                    >
                      {user.city}
                    </span>
                  </div>
                </div>
                
                <div className="user-info">
                  <div className="info-item">
                    <span className="info-label">–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç:</span>
                    <span className="info-value">{user.university}</span>
                  </div>
                </div>

                <div className="user-dates">
                  <div className="date-item">
                    <span className="date-label">–ü–æ—Å–ª–µ–¥–Ω–æ –∂—É—Ä–∏:</span>
                    <span className="date-value">{user.lastJuryDate}</span>
                  </div>
                  <div className="date-item">
                    <span className="date-label">–ü—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–æ –∂—É—Ä–∏:</span>
                    <span className="date-value">{user.previousJuryDate}</span>
                  </div>
                </div>

                <div className="user-actions">
                  <button className="user-btn edit">–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π</button>
                  <button className="user-btn details">–î–µ—Ç–∞–π–ª–∏</button>
                  <button className="user-btn assign">–ù–∞–∑–Ω–∞—á–∏ –∂—É—Ä–∏</button>
                </div>
              </div>
            ))}
          </div>

          {getFilteredUsers().length === 0 && (
            <div className="no-users">
              <h3>–ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏</h3>
              <p>–ù–µ —Å–∞ –æ—Ç–∫—Ä–∏—Ç–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –∑–∞ –∏–∑–±—Ä–∞–Ω–∏—è —Ñ–∏–ª—Ç—ä—Ä</p>
            </div>
          )}
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ */}
      {showAddProcedure && (
        <div className="modal-overlay">
          <div className="modal-content">
            <div className="modal-header">
              <h3>–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞</h3>
              <button 
                className="modal-close"
                onClick={() => setShowAddProcedure(false)}
              >
                √ó
              </button>
            </div>
            <div className="modal-body">
              <p>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç—Ç–∞ –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ —â–µ –±—ä–¥–µ —Ä–µ–∞–ª–∏–∑–∏—Ä–∞–Ω–∞ —Å–∫–æ—Ä–æ.</p>
            </div>
            <div className="modal-footer">
              <button 
                className="modal-btn secondary"
                onClick={() => setShowAddProcedure(false)}
              >
                –û—Ç–∫–∞–∂–∏
              </button>
              <button className="modal-btn primary">
                –ó–∞–ø–∞–∑–∏
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Admin;